package com.aurionpro.model;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

public class Inventory {
	private List guitars;

	public Inventory() {
		guitars = new LinkedList();
	}
	
	public void addGuitar(String serialNumber,String builder,String model,String type,String backWood,String topWood, double price) {
		Guitar guitar = new Guitar(serialNumber,builder,model,type,backWood,topWood,price);
		guitars.add(guitar);
	}
	
	public Guitar getGuitar(String serialNumber) {
		return (Guitar) guitars.stream()
				.filter(Guitar.class::isInstance)
		        .map(Guitar.class::cast)
		        .filter(guitar -> ((Guitar) guitar).getSerialNumber().equals(serialNumber))
		        .findFirst()
		        .orElse(null);
	}
	
//	public Guitar getGuitar(String serialNumber) {
//		for(Iterator<E> i=guitars.iterator(); i.hasNext();) {
//			Guitar guitar = (Guitar)i.next();
//			if(guitar.getSerialNumber().equals(serialNumber)) {
//				return guitar;
//			}
//		}
//		return null;
//	}

	
	public Guitar search(Guitar searchGuitar) {
		for(Iterator i = guitars.iterator(); i.hasNext();) {
			Guitar guitar = (Guitar) i.next();
			String builder = searchGuitar.getBuilder();
			if((builder!=null)&&(!builder.equals(""))&&(!builder.equals(guitar.getBuilder())))
				continue;
			
			String model = searchGuitar.getModel();
			if((model!=null)&&(!model.equals(""))&&(!model.equals(guitar.getModel())))
				continue;
			
			
			String type = searchGuitar.getType();
			if((type!=null)&&(!type.equals(""))&&(!type.equals(guitar.getType())))
				continue;
			
			String backWood = searchGuitar.getBackWood();
			if((backWood!=null)&&(!backWood.equals(""))&&(!backWood.equals(guitar.getBackWood())))
				continue;
			
			String topWood = searchGuitar.getTopWood();
			if((topWood!=null)&&(!topWood.equals(""))&&(!topWood.equals(guitar.getTopWood())))
				continue;
		}
		
		
		
		return null;
		
	}
}
